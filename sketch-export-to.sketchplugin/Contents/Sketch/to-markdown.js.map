{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./src/to-markdown.js","webpack://exports/external \"sketch/dom\"","webpack://exports/external \"sketch/ui\""],"names":["UI","require","sketchDom","context","document","fromNative","fileName","sketchObject","displayName","replace","directoryPath","path","page","selectedPage","allLayers","layers","artboards","forEach","layer","type","push","name","length","message","selection","getSelectionFromUser","reverse","ok","selectedArtboard","err"],"mappings":"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","file":"to-markdown.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/to-markdown.js\");\n","// import fs from \"@skpm/fs\";\n// // import getMdContent from \"./parse-layers\";\n\nconst UI = require(\"sketch/ui\");\nconst sketchDom = require(\"sketch/dom\");\n\n// const saveMd = (path, docName, artboardName, content) => {\n//   fs.writeFileSync(`${path}${docName}-${artboardName}.md`, content, \"utf8\");\n// };\n\n// export default function() {\n//   const docName = document.sketchObject.displayName().replace(\".sketch\", \"\"); // remove sketch extension\n//   const directoryPath = document.path.replace(\n//     document.sketchObject.displayName(),\n//     \"\"\n//   ); // remove filename\n//   const page = document.selectedPage;\n//   const allLayers = page.layers;\n\n//   let artboards = [];\n\n//   allLayers.forEach(layer => {\n//     if (layer.type === \"Artboard\") {\n//       artboards.push(layer.name);\n//     }\n//   });\n\n//   if (artboards.length === 0) {\n//     UI.message(\"You have no artboards in your page. You need at least one.\");\n//   } else {\n//     const selection = UI.getSelectionFromUser(\n//       \"Which artboard you want to export to markdown\",\n//       artboards.reverse()\n//     );\n//     const ok = selection[2];\n//     const selectedArtboard = artboards[selection[1]];\n//     if (ok) {\n//       try {\n//         // saveMd(\n//         //   directoryPath,\n//         //   docName,\n//         //   selectedArtboard,\n//         //   getMdContent(allLayers, selectedArtboard, directoryPath)\n//         // );\n//         UI.message(\n//           `🎉 ${selectedArtboard} was successfully exported to markdown 🎉`\n//         );\n//       } catch (err) {\n//         UI.message(`${err}. Try again.`);\n//       }\n//     }\n//   }\n// }\nexport default context => {\n  // const document = context.getSelectedDocument();\n  const document = sketchDom.fromNative(context.document);\n  const fileName = document.sketchObject.displayName().replace(\".sketch\", \"\"); // remove sketch extension\n  const directoryPath = document.path.replace(\n    document.sketchObject.displayName(),\n    \"\"\n  ); // remove filename\n  const page = document.selectedPage;\n  const allLayers = page.layers;\n\n  let artboards = [];\n\n  allLayers.forEach(layer => {\n    if (layer.type === \"Artboard\") {\n      artboards.push(layer.name);\n    }\n  });\n\n  if (artboards.length === 0) {\n    UI.message(\"You have no artboards in your page. You need at least one.\");\n  } else {\n    const selection = UI.getSelectionFromUser(\n      \"Which artboard you want to export to markdown\",\n      artboards.reverse()\n    );\n    const ok = selection[2];\n    const selectedArtboard = artboards[selection[1]];\n    if (ok) {\n      try {\n        // saveMd(\n        //   directoryPath,\n        //   docName,\n        //   selectedArtboard,\n        //   getMdContent(allLayers, selectedArtboard, directoryPath)\n        // );\n        UI.message(\n          `🎉 ${selectedArtboard} was successfully exported to markdown 🎉`\n        );\n      } catch (err) {\n        UI.message(`${err}. Try again.`);\n      }\n    }\n  }\n\n  // const selectedLayers = context.selection;\n  // const selectedCount = selectedLayers.count();\n\n  // /* Make sure there is at least 1 layer to fill. */\n  // if (!selectedCount) {\n  //   context.document.showMessage(\n  //     \"❌ Cannot perform Bacon Ipsum - No layers selected!\"\n  //   );\n  //   log(\"❌ Failed - No layers selected!\");\n  //   return false;\n  // }\n\n  // /* Fetch the 'Bacon ipsum' paragraph. */\n  // const request = await fetch(\n  //   `https://baconipsum.com/api/?type=all-meat&paras=${selectedCount}&start-with-lorem=0`\n  // );\n  // const baconIpsum = await request.json();\n\n  // /* Fill each layer with 'Bacon ipsum ...' */\n  // selectedLayers.forEach((layer, index) => {\n  //   layer.stringValue = baconIpsum[index];\n  // });\n\n  // context.document.showMessage(\"🥓 Enjoy your bacon! 🥓\");\n  // log(\"✅ Complete!\");\n};\n","module.exports = require(\"sketch/dom\");","module.exports = require(\"sketch/ui\");"],"sourceRoot":""}